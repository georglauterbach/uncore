[package]
name = "kernel"
edition = "2021"
version = "0.3.0"

authors = ["The unCORE Kernel Community"]

# Rust toolchain releases can be found under
# https://rust-lang.github.io/rustup-components-history/

description = "An Operating System Microkernel written in pure, idiomatic Rust"
documentation = "../documentation/"
license = "GPL-3.0"
readme = "../README.md"

homepage = "https://uncore-kernel.org"
repository = "https://github.com/georglauterbach/uncore"

keywords = [
  "operating-system",
  "os",
  "kernel",
  "no-std",
]

categories = [
  "no-std",
  "config",
]

publish = false

# Cargo's auto-detection of library files is turned on. Therefore,
# `src/lib.rs` is automatically detected by Cargo as a
# (freestanding) library. We need to define some code segments
# twice, here as well as an in `src/main.rs` as this file is tested
# by Cargo separately. This file can then be used in integration tests
# as well.
autobenches = true
autobins = true
autoexamples = true
autotests = true

[profile.release]
codegen-units = 1
incremental = true
lto = true

# DO NOT USE this or you will not be able to run tests
# panic = "abort"

[profile.dev]
lto = false

# DO NOT USE this or you will not be able to run tests
# panic = "abort"

[dependencies]
bootloader = "0.10.6"
lazy_static = { version = "1.4.0", features = ["spin_no_std"] }
pic8259 = "0.10.1"
pc-keyboard = "0.5.1"
volatile = "0.2.6"
spin = { version = "0.9.2", features = ["lazy"] }
x86_64 = "0.14.6"
uart_16550 = "0.2.14"

# [package.metadata.bootimage]
# test-success-exit-code = 33 # (0x10 << 1) | 1
# test-timeout = 100 # in seconds
# test-args = [
#   "-device",
#   "isa-debug-exit,iobase=0xf4,iosize=0x04",
#   "-serial",
#   "stdio",
#   "-display",
#   "none",
# ]

[workspace]

members = [
  "boot",
]

[[test]]
name = "stack_overflow"
harness = false
